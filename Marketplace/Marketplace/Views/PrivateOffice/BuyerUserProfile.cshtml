@model Marketplace.Models.BuyerUserProfileVM
@using Newtonsoft.Json


<div id="buyer-profile" class="row">
    <form>
        <div class="form-group">
            <label for="Username">Your username</label>
            <input type="text" disabled class="form-control" id="Username" name="Username" v-bind:value="list.User.Username">
        </div>
        <div class="form-group">
            <label for="NameSurname">Your Name Surname</label>
            <input type="text" disabled class="form-control" id="NameSurname" name="NameSurname" v-bind:value="fullname">
        </div>
        <div class="form-group">
            <label for="Birthday">Birthday</label>
            <input type="text" disabled class="form-control" id="Birthday" name="Birthday" v-bind:value="list.User.Birthday| toDate()">
        </div>
        <div class="form-group">
            <label for="Email">Email</label>
            <input type="text" disabled class="form-control" id="Email" name="Email" v-bind:value="list.User.Email">
        </div>
    </form>
    <h1>Сделанные заказы </h1>
    <table class="table  table-bordered ">
        <thead>
            <tr>
                <th>Product Name</th>
                <th>Quantity</th>
            </tr>
        </thead>
        <tbody>
            <tr v-for="(item,i) in list.Orders">
                <td>{{item.ProductName}}</td>
                <td>{{item.Quantity}}</td>
            </tr>
        </tbody>
    </table>
</div>

@section scripts{
    <script src="~/lib/vue/vue.js"></script>
    <script>
        var app = new Vue({
            el: "#buyer-profile",
            data: {
                list: @Html.Raw(@JsonConvert.SerializeObject(Model))
            },
            computed: {
                fullname() {
                    return this.list.User.Name + ' ' + this.list.User.Surname;
                }
            },
            filters: {
                toDate(value, format = "date") {
                    const options = {};

                    if (format.includes("date")) {
                        options.year = "numeric";
                        options.month = "numeric";
                        options.day = "2-digit";
                    }

                    if (format.includes("time")) {
                        options.hour = "2-digit";
                        options.minute = "2-digit";
                        options.second = "2-digit";
                    }

                    return new Intl.DateTimeFormat("ru-RU", options).format(new Date(value));
                }
            }
        });
    </script>
}
