@model PagedList.IPagedList<Marketplace.DAL.Models.Product>
@using Newtonsoft.Json
@using PagedList.Mvc
@using Marketplace.Controllers
@using Marketplace.Helpers;



<style>

    @@import url('../../Content/PagedList.css');

    .sidenav {
        height: 100%;
        width: 160px;
        position: fixed;
        z-index: 1;
        top: 0;
        left: 0;
        background-color: #111;
        overflow-x: hidden;
        padding-top: 120px;
    }

        .sidenav a {
            padding: 6px 8px 6px 16px;
            text-decoration: none;
            font-size: 25px;
            color: #818181;
            display: block;
        }

            .sidenav a:hover {
                color: #f1f1f1;
            }

    .sidenav {
        font-size: 28px; /* Increased text to enable scrolling */
    }

    .card {
        cursor: pointer;
    }
</style>


<div id="product-list" class="row">
    <div class="col-4">
        <p>
            <a class="btn btn-primary" data-toggle="collapse" href="#multiCollapseExample1" role="button" aria-expanded="false" aria-controls="multiCollapseExample1">Жанры</a>
        </p>
        <div class="row">
            <div class="col">
                <div class="collapse multi-collapse" id="multiCollapseExample1">
                    <div class="card card-body col-4">
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="cyberpunkCB">
                            <label class="form-check-label" for="cyberpunkCB">Cyberpunk</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="crimeCB">
                            <label class="form-check-label" for="crimeCB">Crime</label>
                        </div>
                        <div class="form-check">
                            <input type="checkbox" class="form-check-input" id="detectiveCB">
                            <label class="form-check-label" for="detectiveCB">Detective</label>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <div>
            <button class="btn btn-info" v-on:click="sortByAlphabet()">В алфавитном порядке</button>
        </div>
        <div>
            <button class="btn btn-info" v-on:click="sortByPriceAsc()">По возрастанию цены</button>
        </div>
        <div>
            <button class="btn btn-info" v-on:click="sortByPriceDes()">По убыванию цены</button>
        </div>
    </div>

    <div class="main col-8" style="margin: auto">
        <div>
            <div class="row ">
                <div class="container row myrow">
                    <div v-for="(item) in list" class="col-sm-3">
                        <div class="card col-xs-4" style="width:220px;" @@click.stop="goToDetail(item.Id)">
                            <img class="card-img-top" width="220" height="250" v-bind:src="`data:image/png;base64,${item.Photo}`" />
                            <div class="card-body">
                                <h5 class="card-title">{{item.Name}}, {{item.Price}}грн.</h5>
                                <p class="card-text">{{item.ShortDescription}}</p>
                                @if (User.Identity.GetUserRole() == "Buyer")
                                {
                                    <p>
                                        <input class="btn btn-info" type="submit" v-on:click.stop="addToCart(item)" value="Add to Cart" />
                                    </p>
                                }
                            </div>
                        </div>
                    </div>
                </div>
            </div>
        </div>
        <br />
        <div class="btn-group">
            @Html.PagedListPager(Model, page => Url.Action(nameof(ProductController.ListOfProduct), new { page, currentSearch = ViewBag.SearchText }))
        </div>
    </div>
</div>
@section scripts{

    <script src="~/lib/vue/vue.js"></script>
    <script>
        var app = new Vue({
            el: "#product-list",
            data: {
                list: @Html.Raw(@JsonConvert.SerializeObject(Model))
            },
            methods: {
                addToCart(product) {
                    fetch(`/Cart/AddItem`, {
                        method: 'POST',
                        body: JSON.stringify(product),
                        headers: {
                            'Content-Type': 'application/json'
                        }
                    })
                        .then((response) => {
                            console.log(response);
                        });
                },
                sortByPriceDes() {
                    this.list.sort((a, b) => {
                        if (a.Price > b.Price) {
                            return -1;
                        }
                        if (a.Price < b.Price) {
                            return 1;
                        }
                        return 0;
                    });
                },
                sortByPriceAsc() {
                    this.list.sort((a, b) => {
                        if (a.Price > b.Price) {
                            return 1;
                        }
                        if (a.Price < b.Price) {
                            return -1;
                        }
                        return 0;
                    });
                },
                sortByAlphabet() {
                    this.list.sort((a, b) => {
                        if (a.Name > b.Name) {
                            return 1;
                        }
                        if (a.Name < b.Name) {
                            return -1;
                        }
                        return 0;
                    });
                },
                goToDetail(id) {
                    window.location.href = `/Product/ProductDetail/${id}`;
                }
            }
        });
    </script>
}
